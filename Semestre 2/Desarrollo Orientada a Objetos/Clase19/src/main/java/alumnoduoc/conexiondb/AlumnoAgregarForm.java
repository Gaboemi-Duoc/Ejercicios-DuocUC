/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package alumnoduoc.conexiondb;

import java.awt.Color;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pvespucio
 */
public class AlumnoAgregarForm extends javax.swing.JFrame {

    static int idAlumno;
    /**
     * Creates new form AlumnoAgregarForm
     */
    public AlumnoAgregarForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        runField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        apellidoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fechaNacField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        addEstudiante = new javax.swing.JButton();
        estadoAgregar = new javax.swing.JLabel();
        borrar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        cursoSeleccion = new javax.swing.JComboBox<>();
        agregarCurso = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPruebas = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        fechaPruebaField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nombrePruebaField = new javax.swing.JTextField();
        agregarPrueba = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        nombreField.setName(""); // NOI18N

        jLabel1.setText("RUN");

        runField.setName(""); // NOI18N

        jLabel2.setText("Nombre");

        apellidoField.setName(""); // NOI18N

        jLabel3.setText("Apellido");

        fechaNacField.setName(""); // NOI18N

        jLabel4.setText("Fecha Nacimiento");

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Run", "Nombre", "Fecha Nac."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);
        if (tablaAlumnos.getColumnModel().getColumnCount() > 0) {
            tablaAlumnos.getColumnModel().getColumn(0).setMinWidth(25);
            tablaAlumnos.getColumnModel().getColumn(0).setPreferredWidth(25);
            tablaAlumnos.getColumnModel().getColumn(0).setMaxWidth(45);
        }

        addEstudiante.setBackground(new java.awt.Color(51, 255, 51));
        addEstudiante.setText("Agregar");
        addEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEstudianteActionPerformed(evt);
            }
        });

        estadoAgregar.setText("|");

        borrar.setBackground(new java.awt.Color(255, 51, 51));
        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        actualizar.setBackground(new java.awt.Color(51, 102, 255));
        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        cursoSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1A", "1B", "2A", "2B" }));

        agregarCurso.setText("Agregar al Curso");
        agregarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCursoActionPerformed(evt);
            }
        });

        tablaPruebas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre Prueba", "Curso Asociado", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaPruebas);
        if (tablaPruebas.getColumnModel().getColumnCount() > 0) {
            tablaPruebas.getColumnModel().getColumn(0).setMinWidth(25);
            tablaPruebas.getColumnModel().getColumn(0).setPreferredWidth(25);
            tablaPruebas.getColumnModel().getColumn(0).setMaxWidth(45);
        }

        jLabel5.setText("Fecha Prueba");

        jLabel6.setText("Nombre Prueba");

        agregarPrueba.setText("Agregar Prueba");
        agregarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPruebaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(estadoAgregar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(runField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apellidoField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(fechaNacField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addEstudiante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cursoSeleccion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agregarCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(fechaPruebaField)
                            .addComponent(jLabel6)
                            .addComponent(nombrePruebaField)
                            .addComponent(agregarPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaNacField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadoAgregar)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cursoSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarCurso)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaPruebaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombrePruebaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(agregarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEstudianteActionPerformed
        try {
            int run = Integer.parseInt(runField.getText().replace(".", "").trim().substring(0, 8));
            String dv = runField.getText().substring(runField.getText().length()-1, runField.getText().length());
            String nombre = nombreField.getText();
            String apellido = apellidoField.getText();
            String fechaNac = fechaNacField.getText();
            ConexionDB.agregarAlumno(run, dv, nombre, apellido, fechaNac);
            estadoAgregar.setForeground(Color.GREEN);
            estadoAgregar.setText("Alumno Agregado Exitosamente!");
        } catch (Exception e) {
            estadoAgregar.setForeground(Color.RED);
            estadoAgregar.setText("Error al agregar alumno...");
        } finally {
            updateForm();
            Timer timer = new Timer(2000, event -> {
                estadoAgregar.setForeground(Color.BLACK);
                estadoAgregar.setText("|");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_addEstudianteActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        try {
            int id= idAlumno;
            ConexionDB.eliminarAlumno(id);
            estadoAgregar.setForeground(Color.BLUE);
            estadoAgregar.setText("Alumno Borrado Exitosamente!");
        } catch (Exception e) {
            estadoAgregar.setForeground(Color.RED);
            estadoAgregar.setText("Error al borrar alumno...");
        } finally {
            updateForm();
            Timer timer = new Timer(2000, event -> {
                estadoAgregar.setForeground(Color.BLACK);
                estadoAgregar.setText("|");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        try {
            int run = Integer.parseInt(runField.getText().replace(".", "").trim().substring(0, 8));
            int id= idAlumno;
            String dv = runField.getText().substring(runField.getText().length()-1, runField.getText().length());
            String nombre = nombreField.getText();
            String apellido = apellidoField.getText();
            String fechaNac = fechaNacField.getText();
            ConexionDB.actualizarAlumnoPorID(id,run, dv, nombre, apellido, fechaNac);
            estadoAgregar.setForeground(Color.BLUE);
            estadoAgregar.setText("Alumno Actualizado Exitosamente!");
        } catch (Exception e) {
            estadoAgregar.setForeground(Color.RED);
            estadoAgregar.setText("Error al actualizar alumno...");
        } finally {
            updateForm();
            Timer timer = new Timer(2000, event -> {
                estadoAgregar.setForeground(Color.BLACK);
                estadoAgregar.setText("|");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void agregarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCursoActionPerformed
        try {
            int id = idAlumno;
            int curso = cursoSeleccion.getSelectedIndex() + 1;
            ConexionDB.setCursoAlumno(id, curso);
            estadoAgregar.setForeground(Color.BLUE);
            estadoAgregar.setText("Alumno Asignado un Curso Exitosamente!");
        } catch (Exception e) {
            estadoAgregar.setForeground(Color.RED);
            estadoAgregar.setText("Error al asignar un curso al alumno...");
        } finally {
            updateForm();
            Timer timer = new Timer(2000, event -> {
                estadoAgregar.setForeground(Color.BLACK);
                estadoAgregar.setText("|");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_agregarCursoActionPerformed

    private void agregarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPruebaActionPerformed
        try {
            int curso = cursoSeleccion.getSelectedIndex() + 1;
            String nombre = nombrePruebaField.getText();
            String fechaPrueba = fechaPruebaField.getText();
            ConexionDB.addPrueba(curso, nombre, fechaPrueba);
            estadoAgregar.setForeground(Color.GREEN);
            estadoAgregar.setText("Prueba Agregada Exitosamente!");
        } catch (NumberFormatException e) {
            estadoAgregar.setForeground(Color.RED);
            estadoAgregar.setText("Error al agregar prueba...");
        } finally {
            updateForm();
            Timer timer = new Timer(2000, event -> {
                estadoAgregar.setForeground(Color.BLACK);
                estadoAgregar.setText("|");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_agregarPruebaActionPerformed

    public void updateForm() {
        ConexionDB.getAlumnos();
        ConexionDB.getPruebas();
        runField.setText("");
        nombreField.setText("");
        apellidoField.setText("");
        fechaNacField.setText("");
        cursoSeleccion.setSelectedIndex(0);
        DefaultTableModel modelTable = (DefaultTableModel)tablaAlumnos.getModel();
        int count = modelTable.getRowCount();
        for (int i = 0; i < count; i++) {
            modelTable.removeRow(0);
        }
        for (Object[] dato : ConexionDB.objectRS) {
            modelTable.addRow(dato);
        }
        modelTable = (DefaultTableModel)tablaPruebas.getModel();
        count = modelTable.getRowCount();
        for (int i = 0; i < count; i++) {
            modelTable.removeRow(0);
        }
        for (Object[] dato : ConexionDB.objectPruebasRS) {
            modelTable.addRow(dato);
        }
        
        tablaAlumnos.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                // Obtén el índice de la fila seleccionada
                int selectedRow = tablaAlumnos.getSelectedRow();

                // Si hay una fila seleccionada
                if (selectedRow != -1) {
                    // Obtén los valores de las columnas de la fila seleccionada
                    idAlumno = Integer.parseInt(tablaAlumnos.getValueAt(selectedRow, 0).toString());
                    String run = tablaAlumnos.getValueAt(selectedRow, 1).toString(); 
                    String[] partes = tablaAlumnos.getValueAt(selectedRow, 2).toString().split("\\s+");
                    if (partes.length > 1) {
                        nombreField.setText(partes[0]); 
                        apellidoField.setText(partes[1]); 
                    } else {
                        nombreField.setText(partes[0]);
                        apellidoField.setText(""); 
                    }
                    String fechaNac = tablaAlumnos.getValueAt(selectedRow, 3).toString(); 
                    // Llena los campos de entrada con los valores seleccionados
                    runField.setText(run);
                    fechaNacField.setText(fechaNac);
                }
            }
        });
    }


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlumnoAgregarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlumnoAgregarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlumnoAgregarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlumnoAgregarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlumnoAgregarForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton addEstudiante;
    private javax.swing.JButton agregarCurso;
    private javax.swing.JButton agregarPrueba;
    private javax.swing.JTextField apellidoField;
    private javax.swing.JButton borrar;
    private javax.swing.JComboBox<String> cursoSeleccion;
    private javax.swing.JLabel estadoAgregar;
    private javax.swing.JTextField fechaNacField;
    private javax.swing.JTextField fechaPruebaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombreField;
    private javax.swing.JTextField nombrePruebaField;
    private javax.swing.JTextField runField;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTable tablaPruebas;
    // End of variables declaration//GEN-END:variables
}
